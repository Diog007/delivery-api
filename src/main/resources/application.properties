# ---------------- Basico ----------------
# O Cloud Run vai injetar a porta correta aqui, mas 8090 e um bom padrao.
server.port=${SERVER_PORT:8080}

# ---------------- Banco de Dados (Configurado para H2 em Memoria) ----------------
# Comentamos (ignoramos) as linhas do PostgreSQL para que nao sejam usadas.
# spring.datasource.url=${DB_URL}
# spring.datasource.username=${DB_USER}
# spring.datasource.password=${DB_PASS}
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Adicionamos as configuracoes fixas para o H2.
# A aplicacao vai criar e usar um banco de dados temporario toda vez que iniciar.
spring.datasource.url=jdbc:h2:mem:deliverydb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Garante que as tabelas do banco sejam criadas ou atualizadas ao iniciar.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Habilita o console do H2 para testes locais na URL /h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


# ---------------- JWT ----------------
# Adicionamos uma chave secreta padrao para que a aplicacao funcione
# sem precisar configurar uma variavel de ambiente para isso.
jwt.secret=${JWT_SECRET:pizza-delivery-default-jwt-secret-key}

# ---------------- Upload ----------------
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:11MB}

# ---------------- Google OAuth2 ----------------
# Mantemos estas, pois podem ser uteis no futuro.
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# ---------------- SMTP ----------------
# Mantemos estas tambem.
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT:2525}
spring.mail.username=${SMTP_USER}
spring.mail.password=${SMTP_PASS}
spring.mail.properties.mail.smtp.auth=${SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SMTP_STARTTLS:true}

# ---------------- Importa segredos locais ----------------
# Isso e opcional e nao vai atrapalhar o deploy.
spring.config.import=optional:file:application-secrets.properties
